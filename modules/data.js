/**
 * The output depends on the auto-generated Youtube Music details.
 * 
 * If the description doesn't contain "Auto-generated by YouTube." in the last line,
 * then the video isn't a Youtube Music video, and has to do some workarounds to get
 * as much data as posible.
 * 
 * @param {Object} video ytdl.getBasicInfo() output
 * @param {Object} propeties Manually changed properties (title, artist, album, date, index)
 * @returns {Object} Parsed data
 */
export default function parseVideoData(video, propeties = {}) {
    const title = propeties.title ?? video.videoDetails.title;
    const username = video.videoDetails.author.name;
    const description = video.videoDetails.description?.split("\n\n");
    const publishDate = video.videoDetails.publishDate;

    let album_artist = propeties.album_artist ?? propeties.artist;
    let artist = propeties.artist;
    let album = propeties.album;
    let date = propeties.date;
    let copyright;

    if (description?.slice(-1) == "Auto-generated by YouTube.") {
        album_artist = album_artist ?? username.split(" - ").slice(0, -1).join(" - ");

        artist = artist ?? description[1].split(" Â· ").slice(1).join(", ");
        album = album ?? description[2];
        copyright = description[3];
        date = date ?? description[4].split(": ");

        //If there's no release info, use the video upload year
        if (typeof date === "object" && date[0] === "Released on") date = date[1];
        else date = date ?? publishDate;

    } else {
        album_artist = album_artist ?? username;
        artist = artist ?? username;
        album = album ?? "Unknown";
        date = date ?? publishDate;
    }

    const data = {
        title,
        date,
        creation_time: date,
        album,
        artist,
        album_artist,
        // artist_name: propeties.artist ?? artist,
    };
    
    // If there's no track info, don't even add the attribute 'cause undefined is 0
    if (propeties.index) {
        data.track = propeties.index;
    }
    
    if (copyright) {
        data.copyright = copyright;
    }
    
    if (propeties.genre) {
        data.genre = propeties.genre;
    }
    
    if (propeties.disc) {
        data.disc = propeties.disc;
    }
    
    if (propeties.publisher) {
        data.publisher = propeties.publisher;
    }

    return data;
}
